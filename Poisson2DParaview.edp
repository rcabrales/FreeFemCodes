//
// Curso de Elementos Finitos con FreeFem++
// Universidad de Medellin, 13 al 15 de noviembre de 2019
// Roberto Cabrales
// Programa para resolver el problema de Poisson en 2D
// Ultima modificacion: jueves 14 de noviembre de 2019
//

load "iovtk" //load library of vtk

int wdateParaview=1;
string vtkOutputFile="Poisson2D_2019nov15";
string nombredatos="Temperatura";

// Funciones 
func Uex=sin(pi*x)*sin(pi*y);
func f=2*(pi^2)*Uex; 

// Creamos el dominio de calculo

real Lx=1, Ly=1;

border a(t=0,Lx) {x=t;    y=0;    label=1;};     
border b(t=0,Ly) {x=Lx;   y=t;    label=2;};
border c(t=0,Lx) {x=Lx-t; y=Ly;   label=3;};
border d(t=0,Ly) {x=0;    y=Ly-t; label=4;};
 
// Mallado de la geometria

int Nx=100, Ny=Nx; // numero de nodos del borde de la geometria
mesh Th=buildmesh(a(Nx)+b(Ny)+c(Nx)+d(Ny)); 

// Espacios de elementos finitos usados

fespace Lh(Th,P0);
Lh hvec=hTriangle;
real h=hvec[].max; // parametro de la malla

fespace Xh(Th,P1);
Xh u, v;

// formulacion variacional del problema

problem Poisson2D(u,v) =
int2d(Th) ( dx(u)* dx(v) + dy(u)* dy(v) )
- int2d(Th) ( f * v )
+on(1,2,3,4,u=0);

// Solucion del problema 

Poisson2D;
plot(u,fill=true,value=true);

real error=sqrt(int2d(Th)((Uex-u)^2));
cout << "Error en norma L2 " << error << "para h " << h << endl;

if (wdateParaview==1)
{
	cout << "Salvando datos en formato vtk..." << endl;
	savevtk(vtkOutputFile+".vtk",Th,u,dataname=nombredatos);
};	

/*
int wdateMatlab=1;
string fileMatlab="Poisson2D_2019nov15.m";

if (wdateMatlab==1)
{
	{
		ofstream f(fileMatlab,append);
		f.scientific << "NuParedIzq(" << iter << ")=" << NuParedIzq <<"; \n";
	} 
}
*/



